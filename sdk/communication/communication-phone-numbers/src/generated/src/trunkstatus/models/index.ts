/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** SIP trunks for routing calls */
export interface Trunks {
  /** Represents an array of SIP trunks for routing calls */
  values?: SBCStatus[];
}

/** Represents a trunk's SBC status */
export interface SBCStatus {
  /** Trunk's FQDN of the paired SBC */
  fqdn: string;
  /** The status of the TLS connections between Direct Routing and the SBC */
  tls: SBCStatusTls;
  /** The status of options message send by SBC */
  ping: SBCStatusPing;
  /** The overall status of SBC */
  trunkOverallStatus: SBCStatusTrunkOverallStatus;
  /** The last time the status has been updated */
  lastUpdateTime: string;
}

/** The Communication Services error. */
export interface CommunicationErrorResponse {
  /** The Communication Services error. */
  error: CommunicationError;
}

/** The Communication Services error. */
export interface CommunicationError {
  /** The error code. */
  code: string;
  /** The error message. */
  message: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * Further details about specific errors that led to this error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: CommunicationError[];
  /**
   * The inner error if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly innerError?: CommunicationError;
}

/** Known values of {@link SBCStatusTls} that the service accepts. */
export enum KnownSBCStatusTls {
  NoData = "NoData",
  OK = "OK",
  CertExpiring = "CertExpiring",
  CertExpired = "CertExpired"
}

/**
 * Defines values for SBCStatusTls. \
 * {@link KnownSBCStatusTls} can be used interchangeably with SBCStatusTls,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoData** \
 * **OK** \
 * **CertExpiring** \
 * **CertExpired**
 */
export type SBCStatusTls = string;

/** Known values of {@link SBCStatusPing} that the service accepts. */
export enum KnownSBCStatusPing {
  NoData = "NoData",
  OK = "OK",
  PingError = "PingError",
  PingExpired = "PingExpired"
}

/**
 * Defines values for SBCStatusPing. \
 * {@link KnownSBCStatusPing} can be used interchangeably with SBCStatusPing,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoData** \
 * **OK** \
 * **PingError** \
 * **PingExpired**
 */
export type SBCStatusPing = string;

/** Known values of {@link SBCStatusTrunkOverallStatus} that the service accepts. */
export enum KnownSBCStatusTrunkOverallStatus {
  NoData = "NoData",
  Active = "Active",
  InactiveNoRecentPings = "InactiveNoRecentPings",
  InactiveNoRecentPingsAndCalls = "InactiveNoRecentPingsAndCalls",
  InactiveNoRecentCalls = "InactiveNoRecentCalls"
}

/**
 * Defines values for SBCStatusTrunkOverallStatus. \
 * {@link KnownSBCStatusTrunkOverallStatus} can be used interchangeably with SBCStatusTrunkOverallStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoData** \
 * **Active** \
 * **InactiveNoRecentPings** \
 * **InactiveNoRecentPingsAndCalls** \
 * **InactiveNoRecentCalls**
 */
export type SBCStatusTrunkOverallStatus = string;

/** Optional parameters. */
export interface GetTrunksStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTrunksStatus operation. */
export type GetTrunksStatusResponse = Trunks;

/** Optional parameters. */
export interface GetTrunkStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTrunkStatus operation. */
export type GetTrunkStatusResponse = SBCStatus;

/** Optional parameters. */
export interface TrunkStatusClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
